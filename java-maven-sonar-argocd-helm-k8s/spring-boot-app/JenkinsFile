pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args "-v /c/Users/madhu/Desktop/Devops/jenkinsworkspace:/workspace -w /workspace"
            args '-u root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    environment {
        WORKSPACE_PATH = "C:/Users/madhu/Desktop/Devops/jenkinsworkspace"
        SONAR_URL = "http://localhost:9000"
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
        GIT_USER_NAME = "madhudeva85"
        DOCKER_IMAGE = "madhudeva/ultimate-cicd:${BUILD_NUMBER}"
    }

    stages {
        stage('Checkout') {
            steps {
                sh 'echo Checkout stage passed'
                // git branch: 'main', url: 'https://github.com/madhudeva85/Jenkins-Zero-To-Hero.git'
            }
        }

        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
        }

        stage('Static Code Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh '''
                        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                        mvn sonar:sonar -Dsonar.login=${SONAR_AUTH_TOKEN} -Dsonar.host.url=${SONAR_URL}
                    '''
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    sh '''
                        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                        docker build -t ${DOCKER_IMAGE} .
                    '''
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config --global user.email "madhudeva@gmail.com"
                        git config --global user.name "Madhu Deva"

                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        
                        git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    }
}
